# Makefile for managing the development and deployment lifecycle

# --- Variables ---
# Your private registry URL. Can be overridden e.g., `make push REGISTRY_URL=my.registry.com`
REGISTRY_URL ?= 192.168.0.110:5000

# Service names used in docker-compose
API_SERVICE_NAME := api
SCHEDULER_SERVICE_NAME := scheduler
POSTGRES_SERVICE_NAME := postgres

# Image names in your private registry
API_IMAGE_NAME := my-konakore-api
SCHEDULER_IMAGE_NAME := my-konakore-scheduler
POSTGRES_IMAGE_NAME := my-konakore-postgre

# Image version/tag
TAG ?= latest

# Project name derived from the current directory, used by docker-compose
PROJECT_NAME := $(shell basename $(CURDIR))

# Final image names generated by docker-compose (e.g., konakore_postgre_api)
LOCAL_API_IMAGE := $(PROJECT_NAME)_$(API_SERVICE_NAME)
LOCAL_SCHEDULER_IMAGE := $(PROJECT_NAME)_$(SCHEDULER_SERVICE_NAME)
LOCAL_POSTGRES_IMAGE := $(PROJECT_NAME)_$(POSTGRES_SERVICE_NAME)


# --- Local Development ---
.PHONY: build up down restart logs logs-api logs-scheduler

# Build the custom docker images for api and scheduler
build:
	@echo "--> Building local Docker images..."
	docker-compose build

# Start all services in detached mode
up:
	@echo "--> Starting all services..."
	docker-compose up -d

# Stop and remove all services
down:
	@echo "--> Stopping all services..."
	docker-compose down

# Restart all services
restart: down up

# Tail logs from all services
logs:
	@echo "--> Tailing logs for all services..."
	docker-compose logs -f

# Tail logs for the api service
logs-api:
	@echo "--> Tailing logs for the api service..."
	docker-compose logs -f api

# Tail logs for the scheduler service
logs-scheduler:
	@echo "--> Tailing logs for the scheduler service..."
	docker-compose logs -f scheduler


# --- Deployment ---
.PHONY: tag push release

# Tag the freshly built images for the private registry
tag: build
	@echo "--> Tagging images for registry at $(REGISTRY_URL)..."
	docker tag $(LOCAL_API_IMAGE) $(REGISTRY_URL)/$(API_IMAGE_NAME):$(TAG)
	docker tag $(LOCAL_SCHEDULER_IMAGE) $(REGISTRY_URL)/$(SCHEDULER_IMAGE_NAME):$(TAG)
	docker tag $(LOCAL_POSTGRES_IMAGE) $(REGISTRY_URL)/$(POSTGRES_IMAGE_NAME):$(TAG)

# Push the tagged images to the private registry
push:
	@echo "--> Pushing images to registry at $(REGISTRY_URL)..."
	docker push $(REGISTRY_URL)/$(API_IMAGE_NAME):$(TAG)
	docker push $(REGISTRY_URL)/$(SCHEDULER_IMAGE_NAME):$(TAG)
	docker push $(REGISTRY_URL)/$(POSTGRES_IMAGE_NAME):$(TAG)

# Perform the full release cycle for both images
release: tag push
	@echo "--> Release for api and scheduler images is complete."


# --- Help ---
.PHONY: help

# Display this help message
help:
	@echo "Usage: make [target]"
	@echo ""
	@echo "Local Development:"
	@echo "  build          Build Docker images for api and scheduler"
	@echo "  up             Start services in detached mode"
	@echo "  down           Stop and remove services"
	@echo "  restart        Restart all services"
	@echo "  logs           Tail logs from all services"
	@echo "  logs-api       Tail logs from the api service"
	@echo "  logs-scheduler Tail logs from the scheduler service"
	@echo ""
	@echo "Deployment:"
	@echo "  tag            Tag the api and scheduler images for the registry"
	@echo "  push           Push the tagged images to the registry"
	@echo "  release        Build, tag, and push all custom images"
