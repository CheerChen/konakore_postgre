# docker-compose.deployment.yaml - For Portainer or other production-like deployments
version: '3.8'

services:
  postgres:
    image: 192.168.0.110:5000/my-konakore-postgre:latest
    restart: always
    environment:
      - POSTGRES_USER=konakore
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=konakore
    volumes:
      # Bind mount to a specific host path for persistent data
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U konakore -d konakore"]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    # No build section; pulls the pre-built image from your private registry
    image: 192.168.0.110:5000/my-konakore-api:latest
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - '3000:3000'
    environment:
      # Values are hard-coded here for simplicity, or you can use Portainer's secrets management
      - POSTGRES_USER=konakore
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=konakore

  scheduler:
    # No build section; pulls the pre-built image from your private registry
    image: 192.168.0.110:5000/my-konakore-scheduler:latest
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - POSTGRES_USER=konakore
      - POSTGRES_PASSWORD=secret
      - POSTGRES_DB=konakore
      - PYTHONUNBUFFERED=1
volumes:
  postgres_data: